{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","views/aurelia-accordion/aurelia-accordion.js","resources/attributes/allowexpendmultiple.js","resources/elements/accordion.js","c:/dev/projects/aurelia-accordion/src/app.html","c:/dev/projects/aurelia-accordion/src/appStyles.css","c:/dev/projects/aurelia-accordion/src/resources/elements/accordion.html","c:/dev/projects/aurelia-accordion/src/resources/elements/styles.css","c:/dev/projects/aurelia-accordion/src/views/aurelia-accordion/aurelia-accordion.html","c:/dev/projects/aurelia-accordion/src/views/aurelia-accordion/viewOne.html","c:/dev/projects/aurelia-accordion/src/views/aurelia-accordion/viewThree.html","c:/dev/projects/aurelia-accordion/src/views/aurelia-accordion/viewTwo.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter(config, router) {\n    config.title = 'Aurelia';\n    config.map([\n      { route: ['','aurelia-accordion'], name: 'aurelia-accordion', moduleId: './views/aurelia-accordion/aurelia-accordion', nav: false, title:'Aurelia Accordion Sample' }\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources(['resources/elements/accordion'\n                          ]);\n}\n","export class AureliaAccordion {\r\n  constructor() {\r\n    this.message = 'Hello World!';\r\n    this.views = \r\n    [{title: \"Panel 1\", viewUrl: \"views/aurelia-accordion/viewOne.html\"}, \r\n     {title: \"Panel 2\", viewUrl: \"views/aurelia-accordion/viewTwo.html\"},\r\n     {title: \"Panel 3\", viewUrl: \"views/aurelia-accordion/viewThree.html\"}];\r\n\r\nthis.otherViews = \r\n    [{title: \"Panel 1\", viewUrl: \"views/aurelia-accordion/viewOne.html\"}, \r\n     {title: \"Panel 2\", viewUrl: \"views/aurelia-accordion/viewTwo.html\"},\r\n     {title: \"Panel 3\", viewUrl: \"views/aurelia-accordion/viewThree.html\"}];\r\n\r\n    this.message = \"Gregor Samsa\";\r\n  }\r\n}","import {inject} from 'aurelia-framework';\n\n@inject(Element)\nexport class AllowExpendMultipleCustomAttribute {\n  constructor(element) {\n    this.element = element;\n    this.element.AllowExpendMultiple = true;\n  }\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}","import {bindable} from 'aurelia-framework';\n\nexport class Accordion {\n  @bindable panels;\n  @bindable allowExpendMultiple;\n  @bindable vm;\n  @bindable styles; \n\n  bind() {\n    if (!this.allowExpendMultiple) {\n      this.allowExpendMultiple = false;\n    }\n\n    if (this.panels) {\n      this.panels.forEach((panel) => {\n        panel.active = false;\n      });\n    } else {\n      throw new Error(\"Panels are not bound!\");\n    }\n  }\n\n  toggle(index) {\n    this.panels[index].active = !this.panels[index].active;\n    if (!this.allowExpendMultiple) {\n      for (let counter = 0; counter < this.panels.length; counter++) {\n        if (counter !== index) {\n          this.panels[counter].active = false;\n        }\n      }\n    }\n  }\n}",null,null,null,null,null,null,null,null],"sourceRoot":"..\\src"}